/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from '@solana/kit';

export type RoundStarted = {
  group: Address;
  round: Address;
  roundNumber: number;
  targetAmount: bigint;
  expectedContributors: number;
  startTime: bigint;
  endTime: bigint;
};

export type RoundStartedArgs = {
  group: Address;
  round: Address;
  roundNumber: number;
  targetAmount: number | bigint;
  expectedContributors: number;
  startTime: number | bigint;
  endTime: number | bigint;
};

export function getRoundStartedEncoder(): FixedSizeEncoder<RoundStartedArgs> {
  return getStructEncoder([
    ['group', getAddressEncoder()],
    ['round', getAddressEncoder()],
    ['roundNumber', getU8Encoder()],
    ['targetAmount', getU64Encoder()],
    ['expectedContributors', getU8Encoder()],
    ['startTime', getI64Encoder()],
    ['endTime', getI64Encoder()],
  ]);
}

export function getRoundStartedDecoder(): FixedSizeDecoder<RoundStarted> {
  return getStructDecoder([
    ['group', getAddressDecoder()],
    ['round', getAddressDecoder()],
    ['roundNumber', getU8Decoder()],
    ['targetAmount', getU64Decoder()],
    ['expectedContributors', getU8Decoder()],
    ['startTime', getI64Decoder()],
    ['endTime', getI64Decoder()],
  ]);
}

export function getRoundStartedCodec(): FixedSizeCodec<
  RoundStartedArgs,
  RoundStarted
> {
  return combineCodec(getRoundStartedEncoder(), getRoundStartedDecoder());
}
