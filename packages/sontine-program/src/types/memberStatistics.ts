/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getMemberStatusDecoder,
  getMemberStatusEncoder,
  type MemberStatus,
  type MemberStatusArgs,
} from '.';

/** Member statistics */
export type MemberStatistics = {
  member: Address;
  group: Address;
  status: MemberStatus;
  joinedAt: bigint;
  receivedRound: Option<number>;
  amountReceived: bigint;
  totalContributed: bigint;
  roundsContributed: number;
  currentBid: Option<number>;
  lastBidTime: Option<bigint>;
  fixedOrderPosition: Option<number>;
  contributedCurrentRound: boolean;
};

export type MemberStatisticsArgs = {
  member: Address;
  group: Address;
  status: MemberStatusArgs;
  joinedAt: number | bigint;
  receivedRound: OptionOrNullable<number>;
  amountReceived: number | bigint;
  totalContributed: number | bigint;
  roundsContributed: number;
  currentBid: OptionOrNullable<number>;
  lastBidTime: OptionOrNullable<number | bigint>;
  fixedOrderPosition: OptionOrNullable<number>;
  contributedCurrentRound: boolean;
};

export function getMemberStatisticsEncoder(): Encoder<MemberStatisticsArgs> {
  return getStructEncoder([
    ['member', getAddressEncoder()],
    ['group', getAddressEncoder()],
    ['status', getMemberStatusEncoder()],
    ['joinedAt', getI64Encoder()],
    ['receivedRound', getOptionEncoder(getU8Encoder())],
    ['amountReceived', getU64Encoder()],
    ['totalContributed', getU64Encoder()],
    ['roundsContributed', getU8Encoder()],
    ['currentBid', getOptionEncoder(getU16Encoder())],
    ['lastBidTime', getOptionEncoder(getI64Encoder())],
    ['fixedOrderPosition', getOptionEncoder(getU8Encoder())],
    ['contributedCurrentRound', getBooleanEncoder()],
  ]);
}

export function getMemberStatisticsDecoder(): Decoder<MemberStatistics> {
  return getStructDecoder([
    ['member', getAddressDecoder()],
    ['group', getAddressDecoder()],
    ['status', getMemberStatusDecoder()],
    ['joinedAt', getI64Decoder()],
    ['receivedRound', getOptionDecoder(getU8Decoder())],
    ['amountReceived', getU64Decoder()],
    ['totalContributed', getU64Decoder()],
    ['roundsContributed', getU8Decoder()],
    ['currentBid', getOptionDecoder(getU16Decoder())],
    ['lastBidTime', getOptionDecoder(getI64Decoder())],
    ['fixedOrderPosition', getOptionDecoder(getU8Decoder())],
    ['contributedCurrentRound', getBooleanDecoder()],
  ]);
}

export function getMemberStatisticsCodec(): Codec<
  MemberStatisticsArgs,
  MemberStatistics
> {
  return combineCodec(
    getMemberStatisticsEncoder(),
    getMemberStatisticsDecoder()
  );
}
