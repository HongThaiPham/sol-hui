/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getU64Decoder,
  getU64Encoder,
  getUnitDecoder,
  getUnitEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type GetDiscriminatedUnionVariant,
  type GetDiscriminatedUnionVariantContent,
} from '@solana/kit';

/** Cycle duration for rounds */
export type CycleDuration =
  | { __kind: 'Weekly' }
  | { __kind: 'Monthly' }
  | { __kind: 'Custom'; fields: readonly [bigint] };

export type CycleDurationArgs =
  | { __kind: 'Weekly' }
  | { __kind: 'Monthly' }
  | { __kind: 'Custom'; fields: readonly [number | bigint] };

export function getCycleDurationEncoder(): Encoder<CycleDurationArgs> {
  return getDiscriminatedUnionEncoder([
    ['Weekly', getUnitEncoder()],
    ['Monthly', getUnitEncoder()],
    [
      'Custom',
      getStructEncoder([['fields', getTupleEncoder([getU64Encoder()])]]),
    ],
  ]);
}

export function getCycleDurationDecoder(): Decoder<CycleDuration> {
  return getDiscriminatedUnionDecoder([
    ['Weekly', getUnitDecoder()],
    ['Monthly', getUnitDecoder()],
    [
      'Custom',
      getStructDecoder([['fields', getTupleDecoder([getU64Decoder()])]]),
    ],
  ]);
}

export function getCycleDurationCodec(): Codec<
  CycleDurationArgs,
  CycleDuration
> {
  return combineCodec(getCycleDurationEncoder(), getCycleDurationDecoder());
}

// Data Enum Helpers.
export function cycleDuration(
  kind: 'Weekly'
): GetDiscriminatedUnionVariant<CycleDurationArgs, '__kind', 'Weekly'>;
export function cycleDuration(
  kind: 'Monthly'
): GetDiscriminatedUnionVariant<CycleDurationArgs, '__kind', 'Monthly'>;
export function cycleDuration(
  kind: 'Custom',
  data: GetDiscriminatedUnionVariantContent<
    CycleDurationArgs,
    '__kind',
    'Custom'
  >['fields']
): GetDiscriminatedUnionVariant<CycleDurationArgs, '__kind', 'Custom'>;
export function cycleDuration<K extends CycleDurationArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isCycleDuration<K extends CycleDuration['__kind']>(
  kind: K,
  value: CycleDuration
): value is CycleDuration & { __kind: K } {
  return value.__kind === kind;
}
