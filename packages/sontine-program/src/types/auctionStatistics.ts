/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/kit';
import {
  getAuctionBidDecoder,
  getAuctionBidEncoder,
  type AuctionBid,
  type AuctionBidArgs,
} from '.';

/** Auction statistics */
export type AuctionStatistics = {
  group: Address;
  round: number;
  startTime: bigint;
  endTime: bigint;
  highestBid: Option<AuctionBid>;
  totalBids: number;
  finalized: boolean;
  isActive: boolean;
  remainingTime: bigint;
};

export type AuctionStatisticsArgs = {
  group: Address;
  round: number;
  startTime: number | bigint;
  endTime: number | bigint;
  highestBid: OptionOrNullable<AuctionBidArgs>;
  totalBids: number;
  finalized: boolean;
  isActive: boolean;
  remainingTime: number | bigint;
};

export function getAuctionStatisticsEncoder(): Encoder<AuctionStatisticsArgs> {
  return getStructEncoder([
    ['group', getAddressEncoder()],
    ['round', getU8Encoder()],
    ['startTime', getI64Encoder()],
    ['endTime', getI64Encoder()],
    ['highestBid', getOptionEncoder(getAuctionBidEncoder())],
    ['totalBids', getU8Encoder()],
    ['finalized', getBooleanEncoder()],
    ['isActive', getBooleanEncoder()],
    ['remainingTime', getI64Encoder()],
  ]);
}

export function getAuctionStatisticsDecoder(): Decoder<AuctionStatistics> {
  return getStructDecoder([
    ['group', getAddressDecoder()],
    ['round', getU8Decoder()],
    ['startTime', getI64Decoder()],
    ['endTime', getI64Decoder()],
    ['highestBid', getOptionDecoder(getAuctionBidDecoder())],
    ['totalBids', getU8Decoder()],
    ['finalized', getBooleanDecoder()],
    ['isActive', getBooleanDecoder()],
    ['remainingTime', getI64Decoder()],
  ]);
}

export function getAuctionStatisticsCodec(): Codec<
  AuctionStatisticsArgs,
  AuctionStatistics
> {
  return combineCodec(
    getAuctionStatisticsEncoder(),
    getAuctionStatisticsDecoder()
  );
}
