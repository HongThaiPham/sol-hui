/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getAddressDecoder,
  getAddressEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU16Decoder,
  getU16Encoder,
  getU8Decoder,
  getU8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
  type ReadonlyUint8Array,
} from '@solana/kit';
import {
  getSelectionMethodDecoder,
  getSelectionMethodEncoder,
  type SelectionMethod,
  type SelectionMethodArgs,
} from '.';

export type RandomWinnerSelected = {
  group: Address;
  round: Address;
  roundNumber: number;
  selectedMember: Address;
  selectionMethod: SelectionMethod;
  interestRate: Option<number>;
  randomValue: Option<ReadonlyUint8Array>;
};

export type RandomWinnerSelectedArgs = {
  group: Address;
  round: Address;
  roundNumber: number;
  selectedMember: Address;
  selectionMethod: SelectionMethodArgs;
  interestRate: OptionOrNullable<number>;
  randomValue: OptionOrNullable<ReadonlyUint8Array>;
};

export function getRandomWinnerSelectedEncoder(): Encoder<RandomWinnerSelectedArgs> {
  return getStructEncoder([
    ['group', getAddressEncoder()],
    ['round', getAddressEncoder()],
    ['roundNumber', getU8Encoder()],
    ['selectedMember', getAddressEncoder()],
    ['selectionMethod', getSelectionMethodEncoder()],
    ['interestRate', getOptionEncoder(getU16Encoder())],
    ['randomValue', getOptionEncoder(fixEncoderSize(getBytesEncoder(), 32))],
  ]);
}

export function getRandomWinnerSelectedDecoder(): Decoder<RandomWinnerSelected> {
  return getStructDecoder([
    ['group', getAddressDecoder()],
    ['round', getAddressDecoder()],
    ['roundNumber', getU8Decoder()],
    ['selectedMember', getAddressDecoder()],
    ['selectionMethod', getSelectionMethodDecoder()],
    ['interestRate', getOptionDecoder(getU16Decoder())],
    ['randomValue', getOptionDecoder(fixDecoderSize(getBytesDecoder(), 32))],
  ]);
}

export function getRandomWinnerSelectedCodec(): Codec<
  RandomWinnerSelectedArgs,
  RandomWinnerSelected
> {
  return combineCodec(
    getRandomWinnerSelectedEncoder(),
    getRandomWinnerSelectedDecoder()
  );
}
